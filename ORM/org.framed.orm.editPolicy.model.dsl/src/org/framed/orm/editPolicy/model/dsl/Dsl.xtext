// automatically generated by Xtext
grammar org.framed.orm.editPolicy.model.dsl.Dsl with org.eclipse.xtext.common.Terminals

import "platform:/resource/org.framed.orm.editPolicy.model/" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model returns Model:
	'Model'
	'{'
		'configuration' configuration=Configuration
		('policies' '{' policies+=Policy ( "," policies+=Policy)* '}' )?
	'}';

AbstractRule returns AbstractRule:
	AndRule | RelationNameRule | OrRule | NotRule | ImplicationRule | SourceTypeRule | TargetTypeRule | CommandNameRule | ShapeTypeRule | ParentTypeRule | StepInRule | TrueRule | FalseRule | ShapeNameRule;

AbstractMappingRule returns AbstractMappingRule:
	FeatureNameMappingRule | AndMappingRule | NotMappingRule | OrMappingRule | ImplicationMappingRule | TrueMappingRule;

Configuration returns Configuration:
	{Configuration}
	'Configuration'
	'{'
		('mappings' '{' mappings+=Mapping ( "," mappings+=Mapping)* '}' )?
	'}';

Policy returns Policy:
	'Policy'
	name=EString
	'{'
		'rule' rule=AbstractRule
	'}';

Mapping returns Mapping:
	'Mapping'
	'{'
		'policy' policy=[Policy|EString]
		'rule' rule=AbstractMappingRule
	'}';

FeatureNameMappingRule returns FeatureNameMappingRule:
	{FeatureNameMappingRule}
	'FeatureNameMappingRule'
	name=EString;

AndMappingRule returns AndMappingRule:
	'AndMappingRule'
	'{'
		'rules' '{' rules+=AbstractMappingRule ( "," rules+=AbstractMappingRule)* '}' 
	'}';

NotMappingRule returns NotMappingRule:
	'NotMappingRule'
	'{'
		'rule' rule=AbstractMappingRule
	'}';

OrMappingRule returns OrMappingRule:
	'OrMappingRule'
	'{'
		'rules' '{' rules+=AbstractMappingRule ( "," rules+=AbstractMappingRule)* '}' 
	'}';

ImplicationMappingRule returns ImplicationMappingRule:
	'ImplicationMappingRule'
	'{'
		'antecedent' antecedent=AbstractMappingRule
		'consequent' consequent=AbstractMappingRule
	'}';

TrueMappingRule returns TrueMappingRule:
	{TrueMappingRule}
	'TrueMappingRule'
	;

EString returns ecore::EString:
	STRING | ID;

AndRule returns AndRule:
	'AndRule'
	'{'
		'rules' '{' rules+=AbstractRule ( "," rules+=AbstractRule)* '}' 
	'}';

RelationNameRule returns RelationNameRule:
	{RelationNameRule}
	'RelationNameRule'
	name=EString;

OrRule returns OrRule:
	'OrRule'
	'{'
		'rules' '{' rules+=AbstractRule ( "," rules+=AbstractRule)* '}' 
	'}';

NotRule returns NotRule:
	'NotRule'
	'{'
		'rule' rule=AbstractRule
	'}';

ImplicationRule returns ImplicationRule:
	'ImplicationRule'
	'{'
		'antecedent' antecedent=AbstractRule
		'consequent' consequent=AbstractRule
	'}';

SourceTypeRule returns SourceTypeRule:
	{SourceTypeRule}
	'SourceTypeRule'
	name=EString;

TargetTypeRule returns TargetTypeRule:
	{TargetTypeRule}
	'TargetTypeRule'
	name=EString;

CommandNameRule returns CommandNameRule:
	{CommandNameRule}
	'CommandNameRule'
	name=EString;

ShapeTypeRule returns ShapeTypeRule:
	{ShapeTypeRule}
	'ShapeTypeRule'
	name=EString;

ParentTypeRule returns ParentTypeRule:
	{ParentTypeRule}
	'ParentTypeRule'
	name=EString;

StepInRule returns StepInRule:
	{StepInRule}
	'StepInRule'
	;

TrueRule returns TrueRule:
	{TrueRule}
	'TrueRule'
	;

FalseRule returns FalseRule:
	{FalseRule}
	'FalseRule'
	;

ShapeNameRule returns ShapeNameRule:
	{ShapeNameRule}
	'ShapeNameRule'
	name=EString;
