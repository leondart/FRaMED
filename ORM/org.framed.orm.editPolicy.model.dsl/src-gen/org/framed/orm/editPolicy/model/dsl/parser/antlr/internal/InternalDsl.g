/*
 * generated by Xtext 2.10.0
 */
grammar InternalDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.framed.orm.editPolicy.model.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.framed.orm.editPolicy.model.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.framed.orm.editPolicy.model.dsl.services.DslGrammarAccess;

}

@parser::members {

 	private DslGrammarAccess grammarAccess;

    public InternalDslParser(TokenStream input, DslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected DslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Model'
		{
			newLeafNode(otherlv_0, grammarAccess.getModelAccess().getModelKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='configuration'
		{
			newLeafNode(otherlv_2, grammarAccess.getModelAccess().getConfigurationKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getConfigurationConfigurationParserRuleCall_3_0());
				}
				lv_configuration_3_0=ruleConfiguration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"configuration",
						lv_configuration_3_0,
						"org.framed.orm.editPolicy.model.dsl.Dsl.Configuration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='policies'
			{
				newLeafNode(otherlv_4, grammarAccess.getModelAccess().getPoliciesKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModelAccess().getPoliciesPolicyParserRuleCall_4_2_0());
					}
					lv_policies_6_0=rulePolicy
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModelRule());
						}
						add(
							$current,
							"policies",
							lv_policies_6_0,
							"org.framed.orm.editPolicy.model.dsl.Dsl.Policy");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getModelAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getModelAccess().getPoliciesPolicyParserRuleCall_4_3_1_0());
						}
						lv_policies_8_0=rulePolicy
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getModelRule());
							}
							add(
								$current,
								"policies",
								lv_policies_8_0,
								"org.framed.orm.editPolicy.model.dsl.Dsl.Policy");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getModelAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleAbstractRule
entryRuleAbstractRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractRuleRule()); }
	iv_ruleAbstractRule=ruleAbstractRule
	{ $current=$iv_ruleAbstractRule.current; }
	EOF;

// Rule AbstractRule
ruleAbstractRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractRuleAccess().getAndRuleParserRuleCall_0());
		}
		this_AndRule_0=ruleAndRule
		{
			$current = $this_AndRule_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractRuleAccess().getRelationNameRuleParserRuleCall_1());
		}
		this_RelationNameRule_1=ruleRelationNameRule
		{
			$current = $this_RelationNameRule_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractRuleAccess().getOrRuleParserRuleCall_2());
		}
		this_OrRule_2=ruleOrRule
		{
			$current = $this_OrRule_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractRuleAccess().getNotRuleParserRuleCall_3());
		}
		this_NotRule_3=ruleNotRule
		{
			$current = $this_NotRule_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractRuleAccess().getImplicationRuleParserRuleCall_4());
		}
		this_ImplicationRule_4=ruleImplicationRule
		{
			$current = $this_ImplicationRule_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractRuleAccess().getSourceTypeRuleParserRuleCall_5());
		}
		this_SourceTypeRule_5=ruleSourceTypeRule
		{
			$current = $this_SourceTypeRule_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractRuleAccess().getTargetTypeRuleParserRuleCall_6());
		}
		this_TargetTypeRule_6=ruleTargetTypeRule
		{
			$current = $this_TargetTypeRule_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractRuleAccess().getCommandNameRuleParserRuleCall_7());
		}
		this_CommandNameRule_7=ruleCommandNameRule
		{
			$current = $this_CommandNameRule_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractRuleAccess().getShapeTypeRuleParserRuleCall_8());
		}
		this_ShapeTypeRule_8=ruleShapeTypeRule
		{
			$current = $this_ShapeTypeRule_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractRuleAccess().getParentTypeRuleParserRuleCall_9());
		}
		this_ParentTypeRule_9=ruleParentTypeRule
		{
			$current = $this_ParentTypeRule_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractRuleAccess().getStepInRuleParserRuleCall_10());
		}
		this_StepInRule_10=ruleStepInRule
		{
			$current = $this_StepInRule_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractRuleAccess().getTrueRuleParserRuleCall_11());
		}
		this_TrueRule_11=ruleTrueRule
		{
			$current = $this_TrueRule_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractRuleAccess().getFalseRuleParserRuleCall_12());
		}
		this_FalseRule_12=ruleFalseRule
		{
			$current = $this_FalseRule_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractRuleAccess().getShapeNameRuleParserRuleCall_13());
		}
		this_ShapeNameRule_13=ruleShapeNameRule
		{
			$current = $this_ShapeNameRule_13.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAbstractMappingRule
entryRuleAbstractMappingRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbstractMappingRuleRule()); }
	iv_ruleAbstractMappingRule=ruleAbstractMappingRule
	{ $current=$iv_ruleAbstractMappingRule.current; }
	EOF;

// Rule AbstractMappingRule
ruleAbstractMappingRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAbstractMappingRuleAccess().getFeatureNameMappingRuleParserRuleCall_0());
		}
		this_FeatureNameMappingRule_0=ruleFeatureNameMappingRule
		{
			$current = $this_FeatureNameMappingRule_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractMappingRuleAccess().getAndMappingRuleParserRuleCall_1());
		}
		this_AndMappingRule_1=ruleAndMappingRule
		{
			$current = $this_AndMappingRule_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractMappingRuleAccess().getNotMappingRuleParserRuleCall_2());
		}
		this_NotMappingRule_2=ruleNotMappingRule
		{
			$current = $this_NotMappingRule_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractMappingRuleAccess().getOrMappingRuleParserRuleCall_3());
		}
		this_OrMappingRule_3=ruleOrMappingRule
		{
			$current = $this_OrMappingRule_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractMappingRuleAccess().getImplicationMappingRuleParserRuleCall_4());
		}
		this_ImplicationMappingRule_4=ruleImplicationMappingRule
		{
			$current = $this_ImplicationMappingRule_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAbstractMappingRuleAccess().getTrueMappingRuleParserRuleCall_5());
		}
		this_TrueMappingRule_5=ruleTrueMappingRule
		{
			$current = $this_TrueMappingRule_5.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConfiguration
entryRuleConfiguration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigurationRule()); }
	iv_ruleConfiguration=ruleConfiguration
	{ $current=$iv_ruleConfiguration.current; }
	EOF;

// Rule Configuration
ruleConfiguration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConfigurationAccess().getConfigurationAction_0(),
					$current);
			}
		)
		otherlv_1='Configuration'
		{
			newLeafNode(otherlv_1, grammarAccess.getConfigurationAccess().getConfigurationKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getConfigurationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='mappings'
			{
				newLeafNode(otherlv_3, grammarAccess.getConfigurationAccess().getMappingsKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getConfigurationAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConfigurationAccess().getMappingsMappingParserRuleCall_3_2_0());
					}
					lv_mappings_5_0=ruleMapping
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConfigurationRule());
						}
						add(
							$current,
							"mappings",
							lv_mappings_5_0,
							"org.framed.orm.editPolicy.model.dsl.Dsl.Mapping");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getConfigurationAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getConfigurationAccess().getMappingsMappingParserRuleCall_3_3_1_0());
						}
						lv_mappings_7_0=ruleMapping
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConfigurationRule());
							}
							add(
								$current,
								"mappings",
								lv_mappings_7_0,
								"org.framed.orm.editPolicy.model.dsl.Dsl.Mapping");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getConfigurationAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getConfigurationAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRulePolicy
entryRulePolicy returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPolicyRule()); }
	iv_rulePolicy=rulePolicy
	{ $current=$iv_rulePolicy.current; }
	EOF;

// Rule Policy
rulePolicy returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Policy'
		{
			newLeafNode(otherlv_0, grammarAccess.getPolicyAccess().getPolicyKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPolicyAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPolicyRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.framed.orm.editPolicy.model.dsl.Dsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPolicyAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPolicyAccess().getRuleAbstractRuleParserRuleCall_3_0());
				}
				lv_rule_3_0=ruleAbstractRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPolicyRule());
					}
					set(
						$current,
						"rule",
						lv_rule_3_0,
						"org.framed.orm.editPolicy.model.dsl.Dsl.AbstractRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getPolicyAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleMapping
entryRuleMapping returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMappingRule()); }
	iv_ruleMapping=ruleMapping
	{ $current=$iv_ruleMapping.current; }
	EOF;

// Rule Mapping
ruleMapping returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Mapping'
		{
			newLeafNode(otherlv_0, grammarAccess.getMappingAccess().getMappingKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='rule'
		{
			newLeafNode(otherlv_2, grammarAccess.getMappingAccess().getRuleKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMappingAccess().getRuleAbstractMappingRuleParserRuleCall_3_0());
				}
				lv_rule_3_0=ruleAbstractMappingRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMappingRule());
					}
					set(
						$current,
						"rule",
						lv_rule_3_0,
						"org.framed.orm.editPolicy.model.dsl.Dsl.AbstractMappingRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='policy'
		{
			newLeafNode(otherlv_4, grammarAccess.getMappingAccess().getPolicyKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMappingRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getMappingAccess().getPolicyPolicyCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleFeatureNameMappingRule
entryRuleFeatureNameMappingRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFeatureNameMappingRuleRule()); }
	iv_ruleFeatureNameMappingRule=ruleFeatureNameMappingRule
	{ $current=$iv_ruleFeatureNameMappingRule.current; }
	EOF;

// Rule FeatureNameMappingRule
ruleFeatureNameMappingRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFeatureNameMappingRuleAccess().getFeatureNameMappingRuleAction_0(),
					$current);
			}
		)
		otherlv_1='FeatureNameMappingRule'
		{
			newLeafNode(otherlv_1, grammarAccess.getFeatureNameMappingRuleAccess().getFeatureNameMappingRuleKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFeatureNameMappingRuleAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFeatureNameMappingRuleRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.framed.orm.editPolicy.model.dsl.Dsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAndMappingRule
entryRuleAndMappingRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndMappingRuleRule()); }
	iv_ruleAndMappingRule=ruleAndMappingRule
	{ $current=$iv_ruleAndMappingRule.current; }
	EOF;

// Rule AndMappingRule
ruleAndMappingRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AndMappingRule'
		{
			newLeafNode(otherlv_0, grammarAccess.getAndMappingRuleAccess().getAndMappingRuleKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAndMappingRuleAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAndMappingRuleAccess().getRulesAbstractMappingRuleParserRuleCall_2_0());
				}
				lv_rules_2_0=ruleAbstractMappingRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAndMappingRuleRule());
					}
					add(
						$current,
						"rules",
						lv_rules_2_0,
						"org.framed.orm.editPolicy.model.dsl.Dsl.AbstractMappingRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getAndMappingRuleAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAndMappingRuleAccess().getRulesAbstractMappingRuleParserRuleCall_3_1_0());
					}
					lv_rules_4_0=ruleAbstractMappingRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndMappingRuleRule());
						}
						add(
							$current,
							"rules",
							lv_rules_4_0,
							"org.framed.orm.editPolicy.model.dsl.Dsl.AbstractMappingRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getAndMappingRuleAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleNotMappingRule
entryRuleNotMappingRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotMappingRuleRule()); }
	iv_ruleNotMappingRule=ruleNotMappingRule
	{ $current=$iv_ruleNotMappingRule.current; }
	EOF;

// Rule NotMappingRule
ruleNotMappingRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='NotMappingRule'
		{
			newLeafNode(otherlv_0, grammarAccess.getNotMappingRuleAccess().getNotMappingRuleKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getNotMappingRuleAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNotMappingRuleAccess().getRuleAbstractMappingRuleParserRuleCall_2_0());
				}
				lv_rule_2_0=ruleAbstractMappingRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNotMappingRuleRule());
					}
					set(
						$current,
						"rule",
						lv_rule_2_0,
						"org.framed.orm.editPolicy.model.dsl.Dsl.AbstractMappingRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getNotMappingRuleAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleOrMappingRule
entryRuleOrMappingRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrMappingRuleRule()); }
	iv_ruleOrMappingRule=ruleOrMappingRule
	{ $current=$iv_ruleOrMappingRule.current; }
	EOF;

// Rule OrMappingRule
ruleOrMappingRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='OrMappingRule'
		{
			newLeafNode(otherlv_0, grammarAccess.getOrMappingRuleAccess().getOrMappingRuleKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getOrMappingRuleAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOrMappingRuleAccess().getRulesAbstractMappingRuleParserRuleCall_2_0());
				}
				lv_rules_2_0=ruleAbstractMappingRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrMappingRuleRule());
					}
					add(
						$current,
						"rules",
						lv_rules_2_0,
						"org.framed.orm.editPolicy.model.dsl.Dsl.AbstractMappingRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getOrMappingRuleAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrMappingRuleAccess().getRulesAbstractMappingRuleParserRuleCall_3_1_0());
					}
					lv_rules_4_0=ruleAbstractMappingRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrMappingRuleRule());
						}
						add(
							$current,
							"rules",
							lv_rules_4_0,
							"org.framed.orm.editPolicy.model.dsl.Dsl.AbstractMappingRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getOrMappingRuleAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleImplicationMappingRule
entryRuleImplicationMappingRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImplicationMappingRuleRule()); }
	iv_ruleImplicationMappingRule=ruleImplicationMappingRule
	{ $current=$iv_ruleImplicationMappingRule.current; }
	EOF;

// Rule ImplicationMappingRule
ruleImplicationMappingRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ImplicationMappingRule'
		{
			newLeafNode(otherlv_0, grammarAccess.getImplicationMappingRuleAccess().getImplicationMappingRuleKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getImplicationMappingRuleAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='if'
		{
			newLeafNode(otherlv_2, grammarAccess.getImplicationMappingRuleAccess().getIfKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImplicationMappingRuleAccess().getAntecedentAbstractMappingRuleParserRuleCall_3_0());
				}
				lv_antecedent_3_0=ruleAbstractMappingRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImplicationMappingRuleRule());
					}
					set(
						$current,
						"antecedent",
						lv_antecedent_3_0,
						"org.framed.orm.editPolicy.model.dsl.Dsl.AbstractMappingRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='then'
		{
			newLeafNode(otherlv_4, grammarAccess.getImplicationMappingRuleAccess().getThenKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImplicationMappingRuleAccess().getConsequentAbstractMappingRuleParserRuleCall_5_0());
				}
				lv_consequent_5_0=ruleAbstractMappingRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImplicationMappingRuleRule());
					}
					set(
						$current,
						"consequent",
						lv_consequent_5_0,
						"org.framed.orm.editPolicy.model.dsl.Dsl.AbstractMappingRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getImplicationMappingRuleAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleTrueMappingRule
entryRuleTrueMappingRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrueMappingRuleRule()); }
	iv_ruleTrueMappingRule=ruleTrueMappingRule
	{ $current=$iv_ruleTrueMappingRule.current; }
	EOF;

// Rule TrueMappingRule
ruleTrueMappingRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTrueMappingRuleAccess().getTrueMappingRuleAction_0(),
					$current);
			}
		)
		otherlv_1='TrueMappingRule'
		{
			newLeafNode(otherlv_1, grammarAccess.getTrueMappingRuleAccess().getTrueMappingRuleKeyword_1());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleAndRule
entryRuleAndRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndRuleRule()); }
	iv_ruleAndRule=ruleAndRule
	{ $current=$iv_ruleAndRule.current; }
	EOF;

// Rule AndRule
ruleAndRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AndRule'
		{
			newLeafNode(otherlv_0, grammarAccess.getAndRuleAccess().getAndRuleKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAndRuleAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAndRuleAccess().getRulesAbstractRuleParserRuleCall_2_0());
				}
				lv_rules_2_0=ruleAbstractRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAndRuleRule());
					}
					add(
						$current,
						"rules",
						lv_rules_2_0,
						"org.framed.orm.editPolicy.model.dsl.Dsl.AbstractRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getAndRuleAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAndRuleAccess().getRulesAbstractRuleParserRuleCall_3_1_0());
					}
					lv_rules_4_0=ruleAbstractRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndRuleRule());
						}
						add(
							$current,
							"rules",
							lv_rules_4_0,
							"org.framed.orm.editPolicy.model.dsl.Dsl.AbstractRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getAndRuleAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleRelationNameRule
entryRuleRelationNameRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationNameRuleRule()); }
	iv_ruleRelationNameRule=ruleRelationNameRule
	{ $current=$iv_ruleRelationNameRule.current; }
	EOF;

// Rule RelationNameRule
ruleRelationNameRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRelationNameRuleAccess().getRelationNameRuleAction_0(),
					$current);
			}
		)
		otherlv_1='RelationNameRule'
		{
			newLeafNode(otherlv_1, grammarAccess.getRelationNameRuleAccess().getRelationNameRuleKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRelationNameRuleAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRelationNameRuleRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.framed.orm.editPolicy.model.dsl.Dsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleOrRule
entryRuleOrRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrRuleRule()); }
	iv_ruleOrRule=ruleOrRule
	{ $current=$iv_ruleOrRule.current; }
	EOF;

// Rule OrRule
ruleOrRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='OrRule'
		{
			newLeafNode(otherlv_0, grammarAccess.getOrRuleAccess().getOrRuleKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getOrRuleAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOrRuleAccess().getRulesAbstractRuleParserRuleCall_2_0());
				}
				lv_rules_2_0=ruleAbstractRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrRuleRule());
					}
					add(
						$current,
						"rules",
						lv_rules_2_0,
						"org.framed.orm.editPolicy.model.dsl.Dsl.AbstractRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3=','
			{
				newLeafNode(otherlv_3, grammarAccess.getOrRuleAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrRuleAccess().getRulesAbstractRuleParserRuleCall_3_1_0());
					}
					lv_rules_4_0=ruleAbstractRule
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrRuleRule());
						}
						add(
							$current,
							"rules",
							lv_rules_4_0,
							"org.framed.orm.editPolicy.model.dsl.Dsl.AbstractRule");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getOrRuleAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleNotRule
entryRuleNotRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotRuleRule()); }
	iv_ruleNotRule=ruleNotRule
	{ $current=$iv_ruleNotRule.current; }
	EOF;

// Rule NotRule
ruleNotRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='NotRule'
		{
			newLeafNode(otherlv_0, grammarAccess.getNotRuleAccess().getNotRuleKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getNotRuleAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNotRuleAccess().getRuleAbstractRuleParserRuleCall_2_0());
				}
				lv_rule_2_0=ruleAbstractRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNotRuleRule());
					}
					set(
						$current,
						"rule",
						lv_rule_2_0,
						"org.framed.orm.editPolicy.model.dsl.Dsl.AbstractRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getNotRuleAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleImplicationRule
entryRuleImplicationRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImplicationRuleRule()); }
	iv_ruleImplicationRule=ruleImplicationRule
	{ $current=$iv_ruleImplicationRule.current; }
	EOF;

// Rule ImplicationRule
ruleImplicationRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ImplicationRule'
		{
			newLeafNode(otherlv_0, grammarAccess.getImplicationRuleAccess().getImplicationRuleKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getImplicationRuleAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='if'
		{
			newLeafNode(otherlv_2, grammarAccess.getImplicationRuleAccess().getIfKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImplicationRuleAccess().getAntecedentAbstractRuleParserRuleCall_3_0());
				}
				lv_antecedent_3_0=ruleAbstractRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImplicationRuleRule());
					}
					set(
						$current,
						"antecedent",
						lv_antecedent_3_0,
						"org.framed.orm.editPolicy.model.dsl.Dsl.AbstractRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='then'
		{
			newLeafNode(otherlv_4, grammarAccess.getImplicationRuleAccess().getThenKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImplicationRuleAccess().getConsequentAbstractRuleParserRuleCall_5_0());
				}
				lv_consequent_5_0=ruleAbstractRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImplicationRuleRule());
					}
					set(
						$current,
						"consequent",
						lv_consequent_5_0,
						"org.framed.orm.editPolicy.model.dsl.Dsl.AbstractRule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getImplicationRuleAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleSourceTypeRule
entryRuleSourceTypeRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSourceTypeRuleRule()); }
	iv_ruleSourceTypeRule=ruleSourceTypeRule
	{ $current=$iv_ruleSourceTypeRule.current; }
	EOF;

// Rule SourceTypeRule
ruleSourceTypeRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSourceTypeRuleAccess().getSourceTypeRuleAction_0(),
					$current);
			}
		)
		otherlv_1='SourceTypeRule'
		{
			newLeafNode(otherlv_1, grammarAccess.getSourceTypeRuleAccess().getSourceTypeRuleKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSourceTypeRuleAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSourceTypeRuleRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.framed.orm.editPolicy.model.dsl.Dsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTargetTypeRule
entryRuleTargetTypeRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTargetTypeRuleRule()); }
	iv_ruleTargetTypeRule=ruleTargetTypeRule
	{ $current=$iv_ruleTargetTypeRule.current; }
	EOF;

// Rule TargetTypeRule
ruleTargetTypeRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTargetTypeRuleAccess().getTargetTypeRuleAction_0(),
					$current);
			}
		)
		otherlv_1='TargetTypeRule'
		{
			newLeafNode(otherlv_1, grammarAccess.getTargetTypeRuleAccess().getTargetTypeRuleKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTargetTypeRuleAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTargetTypeRuleRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.framed.orm.editPolicy.model.dsl.Dsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleCommandNameRule
entryRuleCommandNameRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandNameRuleRule()); }
	iv_ruleCommandNameRule=ruleCommandNameRule
	{ $current=$iv_ruleCommandNameRule.current; }
	EOF;

// Rule CommandNameRule
ruleCommandNameRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCommandNameRuleAccess().getCommandNameRuleAction_0(),
					$current);
			}
		)
		otherlv_1='CommandNameRule'
		{
			newLeafNode(otherlv_1, grammarAccess.getCommandNameRuleAccess().getCommandNameRuleKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCommandNameRuleAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandNameRuleRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.framed.orm.editPolicy.model.dsl.Dsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleShapeTypeRule
entryRuleShapeTypeRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShapeTypeRuleRule()); }
	iv_ruleShapeTypeRule=ruleShapeTypeRule
	{ $current=$iv_ruleShapeTypeRule.current; }
	EOF;

// Rule ShapeTypeRule
ruleShapeTypeRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getShapeTypeRuleAccess().getShapeTypeRuleAction_0(),
					$current);
			}
		)
		otherlv_1='ShapeTypeRule'
		{
			newLeafNode(otherlv_1, grammarAccess.getShapeTypeRuleAccess().getShapeTypeRuleKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getShapeTypeRuleAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShapeTypeRuleRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.framed.orm.editPolicy.model.dsl.Dsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParentTypeRule
entryRuleParentTypeRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParentTypeRuleRule()); }
	iv_ruleParentTypeRule=ruleParentTypeRule
	{ $current=$iv_ruleParentTypeRule.current; }
	EOF;

// Rule ParentTypeRule
ruleParentTypeRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParentTypeRuleAccess().getParentTypeRuleAction_0(),
					$current);
			}
		)
		otherlv_1='ParentTypeRule'
		{
			newLeafNode(otherlv_1, grammarAccess.getParentTypeRuleAccess().getParentTypeRuleKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getParentTypeRuleAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParentTypeRuleRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.framed.orm.editPolicy.model.dsl.Dsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleStepInRule
entryRuleStepInRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStepInRuleRule()); }
	iv_ruleStepInRule=ruleStepInRule
	{ $current=$iv_ruleStepInRule.current; }
	EOF;

// Rule StepInRule
ruleStepInRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getStepInRuleAccess().getStepInRuleAction_0(),
					$current);
			}
		)
		otherlv_1='StepInRule'
		{
			newLeafNode(otherlv_1, grammarAccess.getStepInRuleAccess().getStepInRuleKeyword_1());
		}
	)
;

// Entry rule entryRuleTrueRule
entryRuleTrueRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrueRuleRule()); }
	iv_ruleTrueRule=ruleTrueRule
	{ $current=$iv_ruleTrueRule.current; }
	EOF;

// Rule TrueRule
ruleTrueRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTrueRuleAccess().getTrueRuleAction_0(),
					$current);
			}
		)
		otherlv_1='TrueRule'
		{
			newLeafNode(otherlv_1, grammarAccess.getTrueRuleAccess().getTrueRuleKeyword_1());
		}
	)
;

// Entry rule entryRuleFalseRule
entryRuleFalseRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFalseRuleRule()); }
	iv_ruleFalseRule=ruleFalseRule
	{ $current=$iv_ruleFalseRule.current; }
	EOF;

// Rule FalseRule
ruleFalseRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFalseRuleAccess().getFalseRuleAction_0(),
					$current);
			}
		)
		otherlv_1='FalseRule'
		{
			newLeafNode(otherlv_1, grammarAccess.getFalseRuleAccess().getFalseRuleKeyword_1());
		}
	)
;

// Entry rule entryRuleShapeNameRule
entryRuleShapeNameRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShapeNameRuleRule()); }
	iv_ruleShapeNameRule=ruleShapeNameRule
	{ $current=$iv_ruleShapeNameRule.current; }
	EOF;

// Rule ShapeNameRule
ruleShapeNameRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getShapeNameRuleAccess().getShapeNameRuleAction_0(),
					$current);
			}
		)
		otherlv_1='ShapeNameRule'
		{
			newLeafNode(otherlv_1, grammarAccess.getShapeNameRuleAccess().getShapeNameRuleKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getShapeNameRuleAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getShapeNameRuleRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"org.framed.orm.editPolicy.model.dsl.Dsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
