/*
 * generated by Xtext 2.10.0
 */
grammar InternalDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.framed.orm.editPolicy.model.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.framed.orm.editPolicy.model.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.framed.orm.editPolicy.model.dsl.services.DslGrammarAccess;

}
@parser::members {
	private DslGrammarAccess grammarAccess;

	public void setGrammarAccess(DslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractRule
entryRuleAbstractRule
:
{ before(grammarAccess.getAbstractRuleRule()); }
	 ruleAbstractRule
{ after(grammarAccess.getAbstractRuleRule()); } 
	 EOF 
;

// Rule AbstractRule
ruleAbstractRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractRuleAccess().getAlternatives()); }
		(rule__AbstractRule__Alternatives)
		{ after(grammarAccess.getAbstractRuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbstractMappingRule
entryRuleAbstractMappingRule
:
{ before(grammarAccess.getAbstractMappingRuleRule()); }
	 ruleAbstractMappingRule
{ after(grammarAccess.getAbstractMappingRuleRule()); } 
	 EOF 
;

// Rule AbstractMappingRule
ruleAbstractMappingRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbstractMappingRuleAccess().getAlternatives()); }
		(rule__AbstractMappingRule__Alternatives)
		{ after(grammarAccess.getAbstractMappingRuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConfiguration
entryRuleConfiguration
:
{ before(grammarAccess.getConfigurationRule()); }
	 ruleConfiguration
{ after(grammarAccess.getConfigurationRule()); } 
	 EOF 
;

// Rule Configuration
ruleConfiguration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConfigurationAccess().getGroup()); }
		(rule__Configuration__Group__0)
		{ after(grammarAccess.getConfigurationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePolicy
entryRulePolicy
:
{ before(grammarAccess.getPolicyRule()); }
	 rulePolicy
{ after(grammarAccess.getPolicyRule()); } 
	 EOF 
;

// Rule Policy
rulePolicy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPolicyAccess().getGroup()); }
		(rule__Policy__Group__0)
		{ after(grammarAccess.getPolicyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapping
entryRuleMapping
:
{ before(grammarAccess.getMappingRule()); }
	 ruleMapping
{ after(grammarAccess.getMappingRule()); } 
	 EOF 
;

// Rule Mapping
ruleMapping 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMappingAccess().getGroup()); }
		(rule__Mapping__Group__0)
		{ after(grammarAccess.getMappingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFeatureNameMappingRule
entryRuleFeatureNameMappingRule
:
{ before(grammarAccess.getFeatureNameMappingRuleRule()); }
	 ruleFeatureNameMappingRule
{ after(grammarAccess.getFeatureNameMappingRuleRule()); } 
	 EOF 
;

// Rule FeatureNameMappingRule
ruleFeatureNameMappingRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFeatureNameMappingRuleAccess().getGroup()); }
		(rule__FeatureNameMappingRule__Group__0)
		{ after(grammarAccess.getFeatureNameMappingRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndMappingRule
entryRuleAndMappingRule
:
{ before(grammarAccess.getAndMappingRuleRule()); }
	 ruleAndMappingRule
{ after(grammarAccess.getAndMappingRuleRule()); } 
	 EOF 
;

// Rule AndMappingRule
ruleAndMappingRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndMappingRuleAccess().getGroup()); }
		(rule__AndMappingRule__Group__0)
		{ after(grammarAccess.getAndMappingRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNotMappingRule
entryRuleNotMappingRule
:
{ before(grammarAccess.getNotMappingRuleRule()); }
	 ruleNotMappingRule
{ after(grammarAccess.getNotMappingRuleRule()); } 
	 EOF 
;

// Rule NotMappingRule
ruleNotMappingRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotMappingRuleAccess().getGroup()); }
		(rule__NotMappingRule__Group__0)
		{ after(grammarAccess.getNotMappingRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrMappingRule
entryRuleOrMappingRule
:
{ before(grammarAccess.getOrMappingRuleRule()); }
	 ruleOrMappingRule
{ after(grammarAccess.getOrMappingRuleRule()); } 
	 EOF 
;

// Rule OrMappingRule
ruleOrMappingRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrMappingRuleAccess().getGroup()); }
		(rule__OrMappingRule__Group__0)
		{ after(grammarAccess.getOrMappingRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImplicationMappingRule
entryRuleImplicationMappingRule
:
{ before(grammarAccess.getImplicationMappingRuleRule()); }
	 ruleImplicationMappingRule
{ after(grammarAccess.getImplicationMappingRuleRule()); } 
	 EOF 
;

// Rule ImplicationMappingRule
ruleImplicationMappingRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImplicationMappingRuleAccess().getGroup()); }
		(rule__ImplicationMappingRule__Group__0)
		{ after(grammarAccess.getImplicationMappingRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrueMappingRule
entryRuleTrueMappingRule
:
{ before(grammarAccess.getTrueMappingRuleRule()); }
	 ruleTrueMappingRule
{ after(grammarAccess.getTrueMappingRuleRule()); } 
	 EOF 
;

// Rule TrueMappingRule
ruleTrueMappingRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTrueMappingRuleAccess().getGroup()); }
		(rule__TrueMappingRule__Group__0)
		{ after(grammarAccess.getTrueMappingRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAndRule
entryRuleAndRule
:
{ before(grammarAccess.getAndRuleRule()); }
	 ruleAndRule
{ after(grammarAccess.getAndRuleRule()); } 
	 EOF 
;

// Rule AndRule
ruleAndRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAndRuleAccess().getGroup()); }
		(rule__AndRule__Group__0)
		{ after(grammarAccess.getAndRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationNameRule
entryRuleRelationNameRule
:
{ before(grammarAccess.getRelationNameRuleRule()); }
	 ruleRelationNameRule
{ after(grammarAccess.getRelationNameRuleRule()); } 
	 EOF 
;

// Rule RelationNameRule
ruleRelationNameRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationNameRuleAccess().getGroup()); }
		(rule__RelationNameRule__Group__0)
		{ after(grammarAccess.getRelationNameRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrRule
entryRuleOrRule
:
{ before(grammarAccess.getOrRuleRule()); }
	 ruleOrRule
{ after(grammarAccess.getOrRuleRule()); } 
	 EOF 
;

// Rule OrRule
ruleOrRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrRuleAccess().getGroup()); }
		(rule__OrRule__Group__0)
		{ after(grammarAccess.getOrRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNotRule
entryRuleNotRule
:
{ before(grammarAccess.getNotRuleRule()); }
	 ruleNotRule
{ after(grammarAccess.getNotRuleRule()); } 
	 EOF 
;

// Rule NotRule
ruleNotRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNotRuleAccess().getGroup()); }
		(rule__NotRule__Group__0)
		{ after(grammarAccess.getNotRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImplicationRule
entryRuleImplicationRule
:
{ before(grammarAccess.getImplicationRuleRule()); }
	 ruleImplicationRule
{ after(grammarAccess.getImplicationRuleRule()); } 
	 EOF 
;

// Rule ImplicationRule
ruleImplicationRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImplicationRuleAccess().getGroup()); }
		(rule__ImplicationRule__Group__0)
		{ after(grammarAccess.getImplicationRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSourceTypeRule
entryRuleSourceTypeRule
:
{ before(grammarAccess.getSourceTypeRuleRule()); }
	 ruleSourceTypeRule
{ after(grammarAccess.getSourceTypeRuleRule()); } 
	 EOF 
;

// Rule SourceTypeRule
ruleSourceTypeRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSourceTypeRuleAccess().getGroup()); }
		(rule__SourceTypeRule__Group__0)
		{ after(grammarAccess.getSourceTypeRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTargetTypeRule
entryRuleTargetTypeRule
:
{ before(grammarAccess.getTargetTypeRuleRule()); }
	 ruleTargetTypeRule
{ after(grammarAccess.getTargetTypeRuleRule()); } 
	 EOF 
;

// Rule TargetTypeRule
ruleTargetTypeRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTargetTypeRuleAccess().getGroup()); }
		(rule__TargetTypeRule__Group__0)
		{ after(grammarAccess.getTargetTypeRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommandNameRule
entryRuleCommandNameRule
:
{ before(grammarAccess.getCommandNameRuleRule()); }
	 ruleCommandNameRule
{ after(grammarAccess.getCommandNameRuleRule()); } 
	 EOF 
;

// Rule CommandNameRule
ruleCommandNameRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandNameRuleAccess().getGroup()); }
		(rule__CommandNameRule__Group__0)
		{ after(grammarAccess.getCommandNameRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShapeTypeRule
entryRuleShapeTypeRule
:
{ before(grammarAccess.getShapeTypeRuleRule()); }
	 ruleShapeTypeRule
{ after(grammarAccess.getShapeTypeRuleRule()); } 
	 EOF 
;

// Rule ShapeTypeRule
ruleShapeTypeRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShapeTypeRuleAccess().getGroup()); }
		(rule__ShapeTypeRule__Group__0)
		{ after(grammarAccess.getShapeTypeRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParentTypeRule
entryRuleParentTypeRule
:
{ before(grammarAccess.getParentTypeRuleRule()); }
	 ruleParentTypeRule
{ after(grammarAccess.getParentTypeRuleRule()); } 
	 EOF 
;

// Rule ParentTypeRule
ruleParentTypeRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParentTypeRuleAccess().getGroup()); }
		(rule__ParentTypeRule__Group__0)
		{ after(grammarAccess.getParentTypeRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStepInRule
entryRuleStepInRule
:
{ before(grammarAccess.getStepInRuleRule()); }
	 ruleStepInRule
{ after(grammarAccess.getStepInRuleRule()); } 
	 EOF 
;

// Rule StepInRule
ruleStepInRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStepInRuleAccess().getGroup()); }
		(rule__StepInRule__Group__0)
		{ after(grammarAccess.getStepInRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTrueRule
entryRuleTrueRule
:
{ before(grammarAccess.getTrueRuleRule()); }
	 ruleTrueRule
{ after(grammarAccess.getTrueRuleRule()); } 
	 EOF 
;

// Rule TrueRule
ruleTrueRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTrueRuleAccess().getGroup()); }
		(rule__TrueRule__Group__0)
		{ after(grammarAccess.getTrueRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFalseRule
entryRuleFalseRule
:
{ before(grammarAccess.getFalseRuleRule()); }
	 ruleFalseRule
{ after(grammarAccess.getFalseRuleRule()); } 
	 EOF 
;

// Rule FalseRule
ruleFalseRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFalseRuleAccess().getGroup()); }
		(rule__FalseRule__Group__0)
		{ after(grammarAccess.getFalseRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleShapeNameRule
entryRuleShapeNameRule
:
{ before(grammarAccess.getShapeNameRuleRule()); }
	 ruleShapeNameRule
{ after(grammarAccess.getShapeNameRuleRule()); } 
	 EOF 
;

// Rule ShapeNameRule
ruleShapeNameRule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getShapeNameRuleAccess().getGroup()); }
		(rule__ShapeNameRule__Group__0)
		{ after(grammarAccess.getShapeNameRuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractRule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractRuleAccess().getAndRuleParserRuleCall_0()); }
		ruleAndRule
		{ after(grammarAccess.getAbstractRuleAccess().getAndRuleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractRuleAccess().getRelationNameRuleParserRuleCall_1()); }
		ruleRelationNameRule
		{ after(grammarAccess.getAbstractRuleAccess().getRelationNameRuleParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractRuleAccess().getOrRuleParserRuleCall_2()); }
		ruleOrRule
		{ after(grammarAccess.getAbstractRuleAccess().getOrRuleParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractRuleAccess().getNotRuleParserRuleCall_3()); }
		ruleNotRule
		{ after(grammarAccess.getAbstractRuleAccess().getNotRuleParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractRuleAccess().getImplicationRuleParserRuleCall_4()); }
		ruleImplicationRule
		{ after(grammarAccess.getAbstractRuleAccess().getImplicationRuleParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractRuleAccess().getSourceTypeRuleParserRuleCall_5()); }
		ruleSourceTypeRule
		{ after(grammarAccess.getAbstractRuleAccess().getSourceTypeRuleParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractRuleAccess().getTargetTypeRuleParserRuleCall_6()); }
		ruleTargetTypeRule
		{ after(grammarAccess.getAbstractRuleAccess().getTargetTypeRuleParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractRuleAccess().getCommandNameRuleParserRuleCall_7()); }
		ruleCommandNameRule
		{ after(grammarAccess.getAbstractRuleAccess().getCommandNameRuleParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractRuleAccess().getShapeTypeRuleParserRuleCall_8()); }
		ruleShapeTypeRule
		{ after(grammarAccess.getAbstractRuleAccess().getShapeTypeRuleParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractRuleAccess().getParentTypeRuleParserRuleCall_9()); }
		ruleParentTypeRule
		{ after(grammarAccess.getAbstractRuleAccess().getParentTypeRuleParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractRuleAccess().getStepInRuleParserRuleCall_10()); }
		ruleStepInRule
		{ after(grammarAccess.getAbstractRuleAccess().getStepInRuleParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractRuleAccess().getTrueRuleParserRuleCall_11()); }
		ruleTrueRule
		{ after(grammarAccess.getAbstractRuleAccess().getTrueRuleParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractRuleAccess().getFalseRuleParserRuleCall_12()); }
		ruleFalseRule
		{ after(grammarAccess.getAbstractRuleAccess().getFalseRuleParserRuleCall_12()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractRuleAccess().getShapeNameRuleParserRuleCall_13()); }
		ruleShapeNameRule
		{ after(grammarAccess.getAbstractRuleAccess().getShapeNameRuleParserRuleCall_13()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractMappingRule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbstractMappingRuleAccess().getFeatureNameMappingRuleParserRuleCall_0()); }
		ruleFeatureNameMappingRule
		{ after(grammarAccess.getAbstractMappingRuleAccess().getFeatureNameMappingRuleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractMappingRuleAccess().getAndMappingRuleParserRuleCall_1()); }
		ruleAndMappingRule
		{ after(grammarAccess.getAbstractMappingRuleAccess().getAndMappingRuleParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractMappingRuleAccess().getNotMappingRuleParserRuleCall_2()); }
		ruleNotMappingRule
		{ after(grammarAccess.getAbstractMappingRuleAccess().getNotMappingRuleParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractMappingRuleAccess().getOrMappingRuleParserRuleCall_3()); }
		ruleOrMappingRule
		{ after(grammarAccess.getAbstractMappingRuleAccess().getOrMappingRuleParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractMappingRuleAccess().getImplicationMappingRuleParserRuleCall_4()); }
		ruleImplicationMappingRule
		{ after(grammarAccess.getAbstractMappingRuleAccess().getImplicationMappingRuleParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getAbstractMappingRuleAccess().getTrueMappingRuleParserRuleCall_5()); }
		ruleTrueMappingRule
		{ after(grammarAccess.getAbstractMappingRuleAccess().getTrueMappingRuleParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getModelKeyword_0()); }
	'Model'
	{ after(grammarAccess.getModelAccess().getModelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__2__Impl
	rule__Model__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getConfigurationKeyword_2()); }
	'configuration'
	{ after(grammarAccess.getModelAccess().getConfigurationKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__3__Impl
	rule__Model__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getConfigurationAssignment_3()); }
	(rule__Model__ConfigurationAssignment_3)
	{ after(grammarAccess.getModelAccess().getConfigurationAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__4__Impl
	rule__Model__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_4()); }
	(rule__Model__Group_4__0)?
	{ after(grammarAccess.getModelAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_4__0__Impl
	rule__Model__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getPoliciesKeyword_4_0()); }
	'policies'
	{ after(grammarAccess.getModelAccess().getPoliciesKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_4__1__Impl
	rule__Model__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getModelAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_4__2__Impl
	rule__Model__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getPoliciesAssignment_4_2()); }
	(rule__Model__PoliciesAssignment_4_2)
	{ after(grammarAccess.getModelAccess().getPoliciesAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_4__3__Impl
	rule__Model__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getGroup_4_3()); }
	(rule__Model__Group_4_3__0)*
	{ after(grammarAccess.getModelAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_4_4()); }
	'}'
	{ after(grammarAccess.getModelAccess().getRightCurlyBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_4_3__0__Impl
	rule__Model__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getModelAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getPoliciesAssignment_4_3_1()); }
	(rule__Model__PoliciesAssignment_4_3_1)
	{ after(grammarAccess.getModelAccess().getPoliciesAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Configuration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Configuration__Group__0__Impl
	rule__Configuration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationAccess().getConfigurationAction_0()); }
	()
	{ after(grammarAccess.getConfigurationAccess().getConfigurationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Configuration__Group__1__Impl
	rule__Configuration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationAccess().getConfigurationKeyword_1()); }
	'Configuration'
	{ after(grammarAccess.getConfigurationAccess().getConfigurationKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Configuration__Group__2__Impl
	rule__Configuration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getConfigurationAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Configuration__Group__3__Impl
	rule__Configuration__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationAccess().getGroup_3()); }
	(rule__Configuration__Group_3__0)?
	{ after(grammarAccess.getConfigurationAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Configuration__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getConfigurationAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Configuration__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Configuration__Group_3__0__Impl
	rule__Configuration__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationAccess().getMappingsKeyword_3_0()); }
	'mappings'
	{ after(grammarAccess.getConfigurationAccess().getMappingsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Configuration__Group_3__1__Impl
	rule__Configuration__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationAccess().getLeftCurlyBracketKeyword_3_1()); }
	'{'
	{ after(grammarAccess.getConfigurationAccess().getLeftCurlyBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Configuration__Group_3__2__Impl
	rule__Configuration__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationAccess().getMappingsAssignment_3_2()); }
	(rule__Configuration__MappingsAssignment_3_2)
	{ after(grammarAccess.getConfigurationAccess().getMappingsAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Configuration__Group_3__3__Impl
	rule__Configuration__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationAccess().getGroup_3_3()); }
	(rule__Configuration__Group_3_3__0)*
	{ after(grammarAccess.getConfigurationAccess().getGroup_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Configuration__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationAccess().getRightCurlyBracketKeyword_3_4()); }
	'}'
	{ after(grammarAccess.getConfigurationAccess().getRightCurlyBracketKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Configuration__Group_3_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Configuration__Group_3_3__0__Impl
	rule__Configuration__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group_3_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationAccess().getCommaKeyword_3_3_0()); }
	','
	{ after(grammarAccess.getConfigurationAccess().getCommaKeyword_3_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group_3_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Configuration__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__Group_3_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigurationAccess().getMappingsAssignment_3_3_1()); }
	(rule__Configuration__MappingsAssignment_3_3_1)
	{ after(grammarAccess.getConfigurationAccess().getMappingsAssignment_3_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Policy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Policy__Group__0__Impl
	rule__Policy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolicyAccess().getPolicyKeyword_0()); }
	'Policy'
	{ after(grammarAccess.getPolicyAccess().getPolicyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Policy__Group__1__Impl
	rule__Policy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolicyAccess().getNameAssignment_1()); }
	(rule__Policy__NameAssignment_1)
	{ after(grammarAccess.getPolicyAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Policy__Group__2__Impl
	rule__Policy__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolicyAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getPolicyAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Policy__Group__3__Impl
	rule__Policy__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolicyAccess().getRuleAssignment_3()); }
	(rule__Policy__RuleAssignment_3)
	{ after(grammarAccess.getPolicyAccess().getRuleAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Policy__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPolicyAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getPolicyAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__0__Impl
	rule__Mapping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getMappingKeyword_0()); }
	'Mapping'
	{ after(grammarAccess.getMappingAccess().getMappingKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__1__Impl
	rule__Mapping__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__2__Impl
	rule__Mapping__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getRuleKeyword_2()); }
	'rule'
	{ after(grammarAccess.getMappingAccess().getRuleKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__3__Impl
	rule__Mapping__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getRuleAssignment_3()); }
	(rule__Mapping__RuleAssignment_3)
	{ after(grammarAccess.getMappingAccess().getRuleAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__4__Impl
	rule__Mapping__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getPolicyKeyword_4()); }
	'policy'
	{ after(grammarAccess.getMappingAccess().getPolicyKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__5__Impl
	rule__Mapping__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getPolicyAssignment_5()); }
	(rule__Mapping__PolicyAssignment_5)
	{ after(grammarAccess.getMappingAccess().getPolicyAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Mapping__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FeatureNameMappingRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureNameMappingRule__Group__0__Impl
	rule__FeatureNameMappingRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureNameMappingRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureNameMappingRuleAccess().getFeatureNameMappingRuleAction_0()); }
	()
	{ after(grammarAccess.getFeatureNameMappingRuleAccess().getFeatureNameMappingRuleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureNameMappingRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureNameMappingRule__Group__1__Impl
	rule__FeatureNameMappingRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureNameMappingRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureNameMappingRuleAccess().getFeatureNameMappingRuleKeyword_1()); }
	'FeatureNameMappingRule'
	{ after(grammarAccess.getFeatureNameMappingRuleAccess().getFeatureNameMappingRuleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureNameMappingRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FeatureNameMappingRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureNameMappingRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFeatureNameMappingRuleAccess().getNameAssignment_2()); }
	(rule__FeatureNameMappingRule__NameAssignment_2)
	{ after(grammarAccess.getFeatureNameMappingRuleAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndMappingRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndMappingRule__Group__0__Impl
	rule__AndMappingRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndMappingRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndMappingRuleAccess().getAndMappingRuleKeyword_0()); }
	'AndMappingRule'
	{ after(grammarAccess.getAndMappingRuleAccess().getAndMappingRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndMappingRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndMappingRule__Group__1__Impl
	rule__AndMappingRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndMappingRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndMappingRuleAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getAndMappingRuleAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndMappingRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndMappingRule__Group__2__Impl
	rule__AndMappingRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AndMappingRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndMappingRuleAccess().getRulesAssignment_2()); }
	(rule__AndMappingRule__RulesAssignment_2)
	{ after(grammarAccess.getAndMappingRuleAccess().getRulesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndMappingRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndMappingRule__Group__3__Impl
	rule__AndMappingRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AndMappingRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndMappingRuleAccess().getGroup_3()); }
	(rule__AndMappingRule__Group_3__0)*
	{ after(grammarAccess.getAndMappingRuleAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndMappingRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndMappingRule__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndMappingRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndMappingRuleAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getAndMappingRuleAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndMappingRule__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndMappingRule__Group_3__0__Impl
	rule__AndMappingRule__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndMappingRule__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndMappingRuleAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getAndMappingRuleAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndMappingRule__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndMappingRule__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndMappingRule__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndMappingRuleAccess().getRulesAssignment_3_1()); }
	(rule__AndMappingRule__RulesAssignment_3_1)
	{ after(grammarAccess.getAndMappingRuleAccess().getRulesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NotMappingRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotMappingRule__Group__0__Impl
	rule__NotMappingRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotMappingRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotMappingRuleAccess().getNotMappingRuleKeyword_0()); }
	'NotMappingRule'
	{ after(grammarAccess.getNotMappingRuleAccess().getNotMappingRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotMappingRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotMappingRule__Group__1__Impl
	rule__NotMappingRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NotMappingRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotMappingRuleAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getNotMappingRuleAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotMappingRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotMappingRule__Group__2__Impl
	rule__NotMappingRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NotMappingRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotMappingRuleAccess().getRuleAssignment_2()); }
	(rule__NotMappingRule__RuleAssignment_2)
	{ after(grammarAccess.getNotMappingRuleAccess().getRuleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotMappingRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotMappingRule__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotMappingRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotMappingRuleAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getNotMappingRuleAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrMappingRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrMappingRule__Group__0__Impl
	rule__OrMappingRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrMappingRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrMappingRuleAccess().getOrMappingRuleKeyword_0()); }
	'OrMappingRule'
	{ after(grammarAccess.getOrMappingRuleAccess().getOrMappingRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrMappingRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrMappingRule__Group__1__Impl
	rule__OrMappingRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrMappingRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrMappingRuleAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getOrMappingRuleAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrMappingRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrMappingRule__Group__2__Impl
	rule__OrMappingRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OrMappingRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrMappingRuleAccess().getRulesAssignment_2()); }
	(rule__OrMappingRule__RulesAssignment_2)
	{ after(grammarAccess.getOrMappingRuleAccess().getRulesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrMappingRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrMappingRule__Group__3__Impl
	rule__OrMappingRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OrMappingRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrMappingRuleAccess().getGroup_3()); }
	(rule__OrMappingRule__Group_3__0)*
	{ after(grammarAccess.getOrMappingRuleAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrMappingRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrMappingRule__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrMappingRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrMappingRuleAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getOrMappingRuleAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrMappingRule__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrMappingRule__Group_3__0__Impl
	rule__OrMappingRule__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrMappingRule__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrMappingRuleAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getOrMappingRuleAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrMappingRule__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrMappingRule__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrMappingRule__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrMappingRuleAccess().getRulesAssignment_3_1()); }
	(rule__OrMappingRule__RulesAssignment_3_1)
	{ after(grammarAccess.getOrMappingRuleAccess().getRulesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImplicationMappingRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplicationMappingRule__Group__0__Impl
	rule__ImplicationMappingRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationMappingRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplicationMappingRuleAccess().getImplicationMappingRuleKeyword_0()); }
	'ImplicationMappingRule'
	{ after(grammarAccess.getImplicationMappingRuleAccess().getImplicationMappingRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationMappingRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplicationMappingRule__Group__1__Impl
	rule__ImplicationMappingRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationMappingRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplicationMappingRuleAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getImplicationMappingRuleAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationMappingRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplicationMappingRule__Group__2__Impl
	rule__ImplicationMappingRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationMappingRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplicationMappingRuleAccess().getIfKeyword_2()); }
	'if'
	{ after(grammarAccess.getImplicationMappingRuleAccess().getIfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationMappingRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplicationMappingRule__Group__3__Impl
	rule__ImplicationMappingRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationMappingRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplicationMappingRuleAccess().getAntecedentAssignment_3()); }
	(rule__ImplicationMappingRule__AntecedentAssignment_3)
	{ after(grammarAccess.getImplicationMappingRuleAccess().getAntecedentAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationMappingRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplicationMappingRule__Group__4__Impl
	rule__ImplicationMappingRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationMappingRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplicationMappingRuleAccess().getThenKeyword_4()); }
	'then'
	{ after(grammarAccess.getImplicationMappingRuleAccess().getThenKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationMappingRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplicationMappingRule__Group__5__Impl
	rule__ImplicationMappingRule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationMappingRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplicationMappingRuleAccess().getConsequentAssignment_5()); }
	(rule__ImplicationMappingRule__ConsequentAssignment_5)
	{ after(grammarAccess.getImplicationMappingRuleAccess().getConsequentAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationMappingRule__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplicationMappingRule__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationMappingRule__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplicationMappingRuleAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getImplicationMappingRuleAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TrueMappingRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TrueMappingRule__Group__0__Impl
	rule__TrueMappingRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrueMappingRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrueMappingRuleAccess().getTrueMappingRuleAction_0()); }
	()
	{ after(grammarAccess.getTrueMappingRuleAccess().getTrueMappingRuleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TrueMappingRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TrueMappingRule__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrueMappingRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrueMappingRuleAccess().getTrueMappingRuleKeyword_1()); }
	'TrueMappingRule'
	{ after(grammarAccess.getTrueMappingRuleAccess().getTrueMappingRuleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndRule__Group__0__Impl
	rule__AndRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndRuleAccess().getAndRuleKeyword_0()); }
	'AndRule'
	{ after(grammarAccess.getAndRuleAccess().getAndRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndRule__Group__1__Impl
	rule__AndRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndRuleAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getAndRuleAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndRule__Group__2__Impl
	rule__AndRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AndRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndRuleAccess().getRulesAssignment_2()); }
	(rule__AndRule__RulesAssignment_2)
	{ after(grammarAccess.getAndRuleAccess().getRulesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndRule__Group__3__Impl
	rule__AndRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AndRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndRuleAccess().getGroup_3()); }
	(rule__AndRule__Group_3__0)*
	{ after(grammarAccess.getAndRuleAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndRule__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndRuleAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getAndRuleAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AndRule__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndRule__Group_3__0__Impl
	rule__AndRule__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndRule__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndRuleAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getAndRuleAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndRule__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AndRule__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndRule__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAndRuleAccess().getRulesAssignment_3_1()); }
	(rule__AndRule__RulesAssignment_3_1)
	{ after(grammarAccess.getAndRuleAccess().getRulesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationNameRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationNameRule__Group__0__Impl
	rule__RelationNameRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationNameRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationNameRuleAccess().getRelationNameRuleAction_0()); }
	()
	{ after(grammarAccess.getRelationNameRuleAccess().getRelationNameRuleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationNameRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationNameRule__Group__1__Impl
	rule__RelationNameRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationNameRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationNameRuleAccess().getRelationNameRuleKeyword_1()); }
	'RelationNameRule'
	{ after(grammarAccess.getRelationNameRuleAccess().getRelationNameRuleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationNameRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelationNameRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationNameRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationNameRuleAccess().getNameAssignment_2()); }
	(rule__RelationNameRule__NameAssignment_2)
	{ after(grammarAccess.getRelationNameRuleAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrRule__Group__0__Impl
	rule__OrRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrRuleAccess().getOrRuleKeyword_0()); }
	'OrRule'
	{ after(grammarAccess.getOrRuleAccess().getOrRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrRule__Group__1__Impl
	rule__OrRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrRuleAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getOrRuleAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrRule__Group__2__Impl
	rule__OrRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OrRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrRuleAccess().getRulesAssignment_2()); }
	(rule__OrRule__RulesAssignment_2)
	{ after(grammarAccess.getOrRuleAccess().getRulesAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrRule__Group__3__Impl
	rule__OrRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OrRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrRuleAccess().getGroup_3()); }
	(rule__OrRule__Group_3__0)*
	{ after(grammarAccess.getOrRuleAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrRule__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrRuleAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getOrRuleAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrRule__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrRule__Group_3__0__Impl
	rule__OrRule__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrRule__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrRuleAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getOrRuleAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrRule__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrRule__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrRule__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrRuleAccess().getRulesAssignment_3_1()); }
	(rule__OrRule__RulesAssignment_3_1)
	{ after(grammarAccess.getOrRuleAccess().getRulesAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NotRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotRule__Group__0__Impl
	rule__NotRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotRuleAccess().getNotRuleKeyword_0()); }
	'NotRule'
	{ after(grammarAccess.getNotRuleAccess().getNotRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotRule__Group__1__Impl
	rule__NotRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NotRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotRuleAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getNotRuleAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotRule__Group__2__Impl
	rule__NotRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NotRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotRuleAccess().getRuleAssignment_2()); }
	(rule__NotRule__RuleAssignment_2)
	{ after(grammarAccess.getNotRuleAccess().getRuleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NotRule__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNotRuleAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getNotRuleAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImplicationRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplicationRule__Group__0__Impl
	rule__ImplicationRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplicationRuleAccess().getImplicationRuleKeyword_0()); }
	'ImplicationRule'
	{ after(grammarAccess.getImplicationRuleAccess().getImplicationRuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplicationRule__Group__1__Impl
	rule__ImplicationRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplicationRuleAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getImplicationRuleAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplicationRule__Group__2__Impl
	rule__ImplicationRule__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplicationRuleAccess().getIfKeyword_2()); }
	'if'
	{ after(grammarAccess.getImplicationRuleAccess().getIfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationRule__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplicationRule__Group__3__Impl
	rule__ImplicationRule__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationRule__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplicationRuleAccess().getAntecedentAssignment_3()); }
	(rule__ImplicationRule__AntecedentAssignment_3)
	{ after(grammarAccess.getImplicationRuleAccess().getAntecedentAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationRule__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplicationRule__Group__4__Impl
	rule__ImplicationRule__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationRule__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplicationRuleAccess().getThenKeyword_4()); }
	'then'
	{ after(grammarAccess.getImplicationRuleAccess().getThenKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationRule__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplicationRule__Group__5__Impl
	rule__ImplicationRule__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationRule__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplicationRuleAccess().getConsequentAssignment_5()); }
	(rule__ImplicationRule__ConsequentAssignment_5)
	{ after(grammarAccess.getImplicationRuleAccess().getConsequentAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationRule__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImplicationRule__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationRule__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImplicationRuleAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getImplicationRuleAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SourceTypeRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceTypeRule__Group__0__Impl
	rule__SourceTypeRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypeRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceTypeRuleAccess().getSourceTypeRuleAction_0()); }
	()
	{ after(grammarAccess.getSourceTypeRuleAccess().getSourceTypeRuleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypeRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceTypeRule__Group__1__Impl
	rule__SourceTypeRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypeRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceTypeRuleAccess().getSourceTypeRuleKeyword_1()); }
	'SourceTypeRule'
	{ after(grammarAccess.getSourceTypeRuleAccess().getSourceTypeRuleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypeRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SourceTypeRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypeRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSourceTypeRuleAccess().getNameAssignment_2()); }
	(rule__SourceTypeRule__NameAssignment_2)
	{ after(grammarAccess.getSourceTypeRuleAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TargetTypeRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TargetTypeRule__Group__0__Impl
	rule__TargetTypeRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetTypeRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetTypeRuleAccess().getTargetTypeRuleAction_0()); }
	()
	{ after(grammarAccess.getTargetTypeRuleAccess().getTargetTypeRuleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetTypeRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TargetTypeRule__Group__1__Impl
	rule__TargetTypeRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetTypeRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetTypeRuleAccess().getTargetTypeRuleKeyword_1()); }
	'TargetTypeRule'
	{ after(grammarAccess.getTargetTypeRuleAccess().getTargetTypeRuleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetTypeRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TargetTypeRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetTypeRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetTypeRuleAccess().getNameAssignment_2()); }
	(rule__TargetTypeRule__NameAssignment_2)
	{ after(grammarAccess.getTargetTypeRuleAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CommandNameRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandNameRule__Group__0__Impl
	rule__CommandNameRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandNameRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandNameRuleAccess().getCommandNameRuleAction_0()); }
	()
	{ after(grammarAccess.getCommandNameRuleAccess().getCommandNameRuleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandNameRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandNameRule__Group__1__Impl
	rule__CommandNameRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandNameRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandNameRuleAccess().getCommandNameRuleKeyword_1()); }
	'CommandNameRule'
	{ after(grammarAccess.getCommandNameRuleAccess().getCommandNameRuleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandNameRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CommandNameRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandNameRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCommandNameRuleAccess().getNameAssignment_2()); }
	(rule__CommandNameRule__NameAssignment_2)
	{ after(grammarAccess.getCommandNameRuleAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShapeTypeRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeTypeRule__Group__0__Impl
	rule__ShapeTypeRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeTypeRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeTypeRuleAccess().getShapeTypeRuleAction_0()); }
	()
	{ after(grammarAccess.getShapeTypeRuleAccess().getShapeTypeRuleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeTypeRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeTypeRule__Group__1__Impl
	rule__ShapeTypeRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeTypeRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeTypeRuleAccess().getShapeTypeRuleKeyword_1()); }
	'ShapeTypeRule'
	{ after(grammarAccess.getShapeTypeRuleAccess().getShapeTypeRuleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeTypeRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeTypeRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeTypeRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeTypeRuleAccess().getNameAssignment_2()); }
	(rule__ShapeTypeRule__NameAssignment_2)
	{ after(grammarAccess.getShapeTypeRuleAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParentTypeRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParentTypeRule__Group__0__Impl
	rule__ParentTypeRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParentTypeRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParentTypeRuleAccess().getParentTypeRuleAction_0()); }
	()
	{ after(grammarAccess.getParentTypeRuleAccess().getParentTypeRuleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParentTypeRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParentTypeRule__Group__1__Impl
	rule__ParentTypeRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParentTypeRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParentTypeRuleAccess().getParentTypeRuleKeyword_1()); }
	'ParentTypeRule'
	{ after(grammarAccess.getParentTypeRuleAccess().getParentTypeRuleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParentTypeRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParentTypeRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParentTypeRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParentTypeRuleAccess().getNameAssignment_2()); }
	(rule__ParentTypeRule__NameAssignment_2)
	{ after(grammarAccess.getParentTypeRuleAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StepInRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepInRule__Group__0__Impl
	rule__StepInRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StepInRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepInRuleAccess().getStepInRuleAction_0()); }
	()
	{ after(grammarAccess.getStepInRuleAccess().getStepInRuleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StepInRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StepInRule__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StepInRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStepInRuleAccess().getStepInRuleKeyword_1()); }
	'StepInRule'
	{ after(grammarAccess.getStepInRuleAccess().getStepInRuleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TrueRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TrueRule__Group__0__Impl
	rule__TrueRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrueRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrueRuleAccess().getTrueRuleAction_0()); }
	()
	{ after(grammarAccess.getTrueRuleAccess().getTrueRuleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TrueRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TrueRule__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrueRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTrueRuleAccess().getTrueRuleKeyword_1()); }
	'TrueRule'
	{ after(grammarAccess.getTrueRuleAccess().getTrueRuleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FalseRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FalseRule__Group__0__Impl
	rule__FalseRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FalseRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFalseRuleAccess().getFalseRuleAction_0()); }
	()
	{ after(grammarAccess.getFalseRuleAccess().getFalseRuleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FalseRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FalseRule__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FalseRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFalseRuleAccess().getFalseRuleKeyword_1()); }
	'FalseRule'
	{ after(grammarAccess.getFalseRuleAccess().getFalseRuleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ShapeNameRule__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeNameRule__Group__0__Impl
	rule__ShapeNameRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeNameRule__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeNameRuleAccess().getShapeNameRuleAction_0()); }
	()
	{ after(grammarAccess.getShapeNameRuleAccess().getShapeNameRuleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeNameRule__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeNameRule__Group__1__Impl
	rule__ShapeNameRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeNameRule__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeNameRuleAccess().getShapeNameRuleKeyword_1()); }
	'ShapeNameRule'
	{ after(grammarAccess.getShapeNameRuleAccess().getShapeNameRuleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeNameRule__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ShapeNameRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeNameRule__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getShapeNameRuleAccess().getNameAssignment_2()); }
	(rule__ShapeNameRule__NameAssignment_2)
	{ after(grammarAccess.getShapeNameRuleAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ConfigurationAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getConfigurationConfigurationParserRuleCall_3_0()); }
		ruleConfiguration
		{ after(grammarAccess.getModelAccess().getConfigurationConfigurationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__PoliciesAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getPoliciesPolicyParserRuleCall_4_2_0()); }
		rulePolicy
		{ after(grammarAccess.getModelAccess().getPoliciesPolicyParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__PoliciesAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getPoliciesPolicyParserRuleCall_4_3_1_0()); }
		rulePolicy
		{ after(grammarAccess.getModelAccess().getPoliciesPolicyParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__MappingsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurationAccess().getMappingsMappingParserRuleCall_3_2_0()); }
		ruleMapping
		{ after(grammarAccess.getConfigurationAccess().getMappingsMappingParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Configuration__MappingsAssignment_3_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigurationAccess().getMappingsMappingParserRuleCall_3_3_1_0()); }
		ruleMapping
		{ after(grammarAccess.getConfigurationAccess().getMappingsMappingParserRuleCall_3_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolicyAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPolicyAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Policy__RuleAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPolicyAccess().getRuleAbstractRuleParserRuleCall_3_0()); }
		ruleAbstractRule
		{ after(grammarAccess.getPolicyAccess().getRuleAbstractRuleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__RuleAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingAccess().getRuleAbstractMappingRuleParserRuleCall_3_0()); }
		ruleAbstractMappingRule
		{ after(grammarAccess.getMappingAccess().getRuleAbstractMappingRuleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__PolicyAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMappingAccess().getPolicyPolicyCrossReference_5_0()); }
		(
			{ before(grammarAccess.getMappingAccess().getPolicyPolicyIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getMappingAccess().getPolicyPolicyIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getMappingAccess().getPolicyPolicyCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FeatureNameMappingRule__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFeatureNameMappingRuleAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getFeatureNameMappingRuleAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndMappingRule__RulesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndMappingRuleAccess().getRulesAbstractMappingRuleParserRuleCall_2_0()); }
		ruleAbstractMappingRule
		{ after(grammarAccess.getAndMappingRuleAccess().getRulesAbstractMappingRuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndMappingRule__RulesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndMappingRuleAccess().getRulesAbstractMappingRuleParserRuleCall_3_1_0()); }
		ruleAbstractMappingRule
		{ after(grammarAccess.getAndMappingRuleAccess().getRulesAbstractMappingRuleParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotMappingRule__RuleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotMappingRuleAccess().getRuleAbstractMappingRuleParserRuleCall_2_0()); }
		ruleAbstractMappingRule
		{ after(grammarAccess.getNotMappingRuleAccess().getRuleAbstractMappingRuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrMappingRule__RulesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrMappingRuleAccess().getRulesAbstractMappingRuleParserRuleCall_2_0()); }
		ruleAbstractMappingRule
		{ after(grammarAccess.getOrMappingRuleAccess().getRulesAbstractMappingRuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrMappingRule__RulesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrMappingRuleAccess().getRulesAbstractMappingRuleParserRuleCall_3_1_0()); }
		ruleAbstractMappingRule
		{ after(grammarAccess.getOrMappingRuleAccess().getRulesAbstractMappingRuleParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationMappingRule__AntecedentAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplicationMappingRuleAccess().getAntecedentAbstractMappingRuleParserRuleCall_3_0()); }
		ruleAbstractMappingRule
		{ after(grammarAccess.getImplicationMappingRuleAccess().getAntecedentAbstractMappingRuleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationMappingRule__ConsequentAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplicationMappingRuleAccess().getConsequentAbstractMappingRuleParserRuleCall_5_0()); }
		ruleAbstractMappingRule
		{ after(grammarAccess.getImplicationMappingRuleAccess().getConsequentAbstractMappingRuleParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndRule__RulesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndRuleAccess().getRulesAbstractRuleParserRuleCall_2_0()); }
		ruleAbstractRule
		{ after(grammarAccess.getAndRuleAccess().getRulesAbstractRuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AndRule__RulesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAndRuleAccess().getRulesAbstractRuleParserRuleCall_3_1_0()); }
		ruleAbstractRule
		{ after(grammarAccess.getAndRuleAccess().getRulesAbstractRuleParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationNameRule__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationNameRuleAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getRelationNameRuleAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrRule__RulesAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrRuleAccess().getRulesAbstractRuleParserRuleCall_2_0()); }
		ruleAbstractRule
		{ after(grammarAccess.getOrRuleAccess().getRulesAbstractRuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrRule__RulesAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrRuleAccess().getRulesAbstractRuleParserRuleCall_3_1_0()); }
		ruleAbstractRule
		{ after(grammarAccess.getOrRuleAccess().getRulesAbstractRuleParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NotRule__RuleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNotRuleAccess().getRuleAbstractRuleParserRuleCall_2_0()); }
		ruleAbstractRule
		{ after(grammarAccess.getNotRuleAccess().getRuleAbstractRuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationRule__AntecedentAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplicationRuleAccess().getAntecedentAbstractRuleParserRuleCall_3_0()); }
		ruleAbstractRule
		{ after(grammarAccess.getImplicationRuleAccess().getAntecedentAbstractRuleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImplicationRule__ConsequentAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImplicationRuleAccess().getConsequentAbstractRuleParserRuleCall_5_0()); }
		ruleAbstractRule
		{ after(grammarAccess.getImplicationRuleAccess().getConsequentAbstractRuleParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SourceTypeRule__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSourceTypeRuleAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getSourceTypeRuleAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetTypeRule__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTargetTypeRuleAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getTargetTypeRuleAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CommandNameRule__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandNameRuleAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getCommandNameRuleAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeTypeRule__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeTypeRuleAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getShapeTypeRuleAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParentTypeRule__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParentTypeRuleAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getParentTypeRuleAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ShapeNameRule__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getShapeNameRuleAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getShapeNameRuleAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
